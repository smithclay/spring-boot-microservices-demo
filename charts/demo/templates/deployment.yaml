apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: currency-conversion
  name: currency-conversion
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: currency-conversion
  template:
    metadata:
      labels:
        app: currency-conversion
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: currency-conversion-service
        image: ghcr.io/smithclay/spring-boot-microservices-demo:currency-conversion-service-{{ .Values.image.tag | default "latest" }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8100
        readinessProbe:
          httpGet:
            port: 8100
            path: /actuator/health/readiness
        livenessProbe:
          httpGet:
            port: 8100
            path: /actuator/health/liveness
        resources:
          limits:
            memory: 768Mi
        envFrom:
          - configMapRef:
              name: currency-conversion 
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: currency-exchange
  name: currency-exchange
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: currency-exchange
  template:
    metadata:
      labels:
        app: currency-exchange
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: currency-exchange-service
        image: ghcr.io/smithclay/spring-boot-microservices-demo:currency-exchange-service-{{ .Values.image.tag | default "latest" }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            port: 8000
            path: /actuator/health/readiness
        livenessProbe:
          httpGet:
            port: 8000
            path: /actuator/health/liveness
        resources:
          limits:
            memory: 768Mi
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  labels:
    app: limits
  name: limits
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: limits
  template:
    metadata:
      labels:
        app: limits
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: limits-service
        image: ghcr.io/smithclay/spring-boot-microservices-demo:limits-service-{{ .Values.image.tag | default "latest" }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        envFrom:
          - configMapRef:
              name: limits 
        readinessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/readiness
        livenessProbe:
          httpGet:
            port: 8080
            path: /actuator/health/liveness
        resources:
          limits:
            memory: 768Mi
      restartPolicy: Always
